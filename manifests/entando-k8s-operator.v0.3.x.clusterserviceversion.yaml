apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: entando-k8s-operator.v0.3.60
  namespace: placeholder
  annotations:
    alm-examples: >-
      [
        {"apiVersion":"entando.org/v1","kind":"EntandoDeBundle","metadata":{"name":"my-bundle","namespace":"my-namespace"},"spec":{"details":{"name":"my-bundle"}}},
        {"apiVersion":"entando.org/v1","kind":"EntandoDatabaseService","metadata":{"name":"my-entando-database-service","namespace":"my-namespace"},"spec":{"dbms":"postgresql","databaseName":"my_database","createDeployment":true}},
        {"apiVersion":"entando.org/v1","kind":"EntandoKeycloakServer","metadata":{"name":"my-keycloak","namespace":"my-namespace"},"spec":{"standardImage":"redhat-sso", "dbms":"postgresql","replicas":1,"environmentVariables":[]}},
        {"apiVersion":"entando.org/v1","kind":"EntandoClusterInfrastructure","metadata":{"name":"my-entando-cluster-infrastructure","namespace":"my-namespace"},"spec":{"replicas":1,"environmentVariables":[]}},
        {"apiVersion":"entando.org/v1","kind":"EntandoPlugin","metadata":{"name":"my-entando-plugin","namespace":"my-namespace"},"spec": {"dbms": "postgresql","healthCheckPath": "/management/health","image": "entando/entando-avatar-plugin:6.0.5","ingressHostName": "my-plugin.apps-crc.testing","ingressPath": "/avatarPlugin","replicas": 1,"roles": [{"code": "admin","name": "user"},{"code": "user","name": "user"}],"securityLevel": "strict"}},
        {"apiVersion":"entando.org/v1","kind":"EntandoApp","metadata":{"name":"my-app","namespace":"my-namespace"},"spec":{"dbms":"postgresql","environmentVariables":[],"ingressHostName":"my-app.apps-crc.testing","replicas":1,"standardServerImage":"eap"}},
        {"apiVersion":"entando.org/v1","kind":"EntandoAppPluginLink","metadata":{"name":"my-link","namespace":"my-namespace"},"spec":{"entandoAppName":"my-app","entandoPluginName":"my-plugin"}},
        {"apiVersion":"entando.org/v1","kind":"EntandoCompositeApp","metadata":{"name":"my-entando-composite-app","namespace":"my-namespace"},"spec":{"dbmsOverride":"postgresql","ingressHostNameOverride":"entando.apps-crc.testing","components":[{"kind":"EntandoDatabaseService","metadata":{"name":"inline-entando-database-service"},"spec":{"createDeployment":true}},{"kind":"EntandoKeycloakServer","metadata":{"name":"inline-keycloak"},"spec":{"standardImage":"redhat-sso"}},{"kind":"EntandoClusterInfrastructure","metadata":{"name":"inline-entando-cluster-infrastructure"},"spec":{}},{"kind":"EntandoApp","metadata":{"name":"inline-app"},"spec":{"standardServerImage":"eap"}},{"kind":"EntandoPlugin","metadata":{"name":"inline-plugin"},"spec":{"healthCheckPath":"/management/health","image":"entando/entando-avatar-plugin:6.0.5","ingressPath":"/avatarPlugin","roles":[{"code":"admin","name":"admin"},{"code":"user","name":"user"}]}},{"kind":"EntandoAppPluginLink","metadata":{"name":"inline-link"},"spec":{"entandoAppName":"inline-app","entandoPluginName":"inline-plugin"}}]}}
      ]
    categories: Developer Tools
    certified: 'false'
    createdAt: ''
    description: >-
      Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom
      resources and deploys the relevant containers in the Kubernetes cluster.
    containerImage: ''
    support: ''
    capabilities: Basic Install
    repository: ''
spec:
  displayName: Entando Operator
  maturity: beta
  version: 0.3.60
#  replaces: entando-k8s-operator.v0.3.56
  skips: []
  description: >
    ## Entando


    Entando is a micro frontend platform for Kubernetes that helps enterprises
    innovate faster with parallel development teams that have end-to-end
    autonomy across the entire stack.


    With native support for Javascript app development, a micro frontend and
    microservices architecture, deployment of apps in containers that can be
    individually scaled up and down, and automated management of containers with
    Kubernetes, we simplify the move for enterprises looking to modernize across
    on-prem and cloud infrastructures.

    ## About this Operator

    The Entando Operator processes the various custom resource in Kubernetes
    that represent the different component of an Entando application.

    EntandoKeycloakServers are used to deploy Keycloak, or in certified
    environments, Red Hat SSO servers that can then be used by subsequent
    deployments as an OIDC provider,

    EntandoApps are used to deploy the appropriate Wildfly or JBoss EAP
    containers hosting an Entando App, or potentially also custom containers.

    EntandoPlugins can be used to deploy Entando microservice plugins in the
    cluster and then link them to one or more EntandoApps.

    ## Prerequisites for enabling this Operator

    This Operator can be deployed and will function using default settings without any prerequisite configuration. However,
    once deployed, the Entando Operator's configuration can be further customized by providing the following configmap and
    a secrets

    ### ConfigMap: entando-operator-config

    The 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked
    up by the operator on subsequent event processing. It supports the following keys:

        entando.k8s.operator.gc.controller.pods: set this to "false" to keep controller pods after completion.
        entando.k8s.operator.compliance.mode: set this to "community" if there is no requirement for Red Hat compliance
        entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts
        entando.k8s.operator.disable.pvc.garbage.collection: set this to "false" if you want PVCs to be deleted with the custom resources they are associated with
        entando.k8s.operator.impose.default.limits: set this to "false" if there is no need to limit the resource consumption of pods on your cluster
        entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources
        entando.k8s.operator.force.db.password.reset: set this to "true" if you plan to delete Secrets from your namespace but you want to retain the Database they point to
        entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.
        entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret
        entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret
        entando.assume.external.https.provider: Set this to "true" if your cloud provider handles HTTPS for you
        entando.use.auto.cert.generation: Set this to "true" if you would prefer Openshift using its internal CA to generate certificates for your Routes
        entando.default.routing.suffix: A domain name that can be suffixed to deployment names where the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.
        entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod
        entando.pod.readiness.timeout.seconds: The it will take before Entando fails a Service Pod
        entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.


    ### entando-pull-secret

    The secret to be used to pull Entando images from the Red Hat container
    registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator

    ### entando-tls-secret

    A standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.

    ### entando-ca-cert-secret

    This an opaque secret in the Entando Operator's namespace that contains the
    certificates of all trusted certificate authorities
    in your environment. This is generally used mainly for self signed
    certificates. As is generally the case for opaque
    secrets, there are no constraints on the keys in this secret. However, limit
    the files inside the secret should contain X509 certificates or certificate chains.
    The Entando Operator will load all of these files into a Java
    keystore that it then configures as the
    trust store for each container that uses Java.

  minKubeVersion: 1.19.0
  keywords:
    - MFE
  maintainers:
    - name: support
      email: dev@entando.com
    - name: author
      email: a.barnard@entando.com
  provider:
    name: 'Entando, Inc'
  labels: { }
  selector:
    matchLabels: { }
  links:
    - name: Documentation
      url: 'https://dev.entando.org/v6.3/docs/'
    - name: Support
      url: 'https://www.entando.com/'
  icon:
    - base64data: >-
        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
      mediatype: image/png
  customresourcedefinitions:
    owned:
      - name: entandocompositeapps.entando.org
        kind: EntandoCompositeApp
        displayName: Entando Composite Application
        version: v1
        description: >
          Using an Entando Composite Application is the easiest way to get started with Entando. It allows the user to
          combine any number of the Entando Custom Resource and deploy them in the sequence specified. This is useful
          for scenarios where one Entando Custom Resource (e.g. an EntandoPlugin) is dependent on another Entando
          Custom Resource such as an EntandoKeycloakServer or EntandoDatabaseService. Simply place the
          EntandoKeycloakServer or EntandoDatabaseService ahead of the EntandoPlugin in the list of components,
          deploy the EntandoCompositeApp and wait for the whole application to be ready.
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
          - version: v1
            kind: Ingress
          - version: v1
            kind: PersistentVolumeClaim
        specDescriptors: [ ]
        statusDescriptors: [ ]
      - name: entandodatabaseservices.entando.org
        displayName: Entando Database Service
        kind: EntandoDatabaseService
        version: v1
        description: >
          The EntandoDatabaseService is typically used to share a database instance across multiple deployments. This
          custom resource can either point to an external database service, or it can actually deploy a container that
          hosts the database service. Any subsequent deployments in the same namespace the needs a service
          by the same database vendor specified in the EntandoDatabaseService will be configured to point to this
          database service.
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: PersistentVolumeClaim
        specDescriptors: [ ]
        statusDescriptors: [ ]
      - name: entandokeycloakservers.entando.org
        kind: EntandoKeycloakServer
        displayName: Entando Keycloak Server
        version: v1
        description: >
          The EntandoKeycloakServer custom resource instructs the Entando Operator to deploy either the Keycloak Community
          OIDC provider, or its equivalent commercial product, Red Hat SSO. Once a Keycloak server has been deployed,
          subsequent EntandoApp and EntandoPlugin deployments can use it as an OIDC provider. The Entand Operator
          will automatically create OIDC Clients for these deployments in the resulting Keycloak Server.
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
          - version: v1
            kind: Ingress
          - version: v1
            kind: PersistentVolumeClaim
        specDescriptors: [ ]
        statusDescriptors: [ ]
      - name: entandoclusterinfrastructures.entando.org
        kind: EntandoClusterInfrastructure
        displayName: Entando Cluster Infrastructure
        version: v1
        description: >
          The EntandoClusterInfrastructure resource allows the Entando Operator to deploy its abstraction layer on
          Kubernetes, the Entando Kubernetes Service. In future, we will be deploying this service in the Entando
          Operator's ClusterServiceVersion.
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
          - version: v1
            kind: Ingress
          - version: v1
            kind: PersistentVolumeClaim
        specDescriptors: [ ]
        statusDescriptors: [ ]
      - name: entandoplugins.entando.org
        kind: EntandoPlugin
        displayName: Entando Plugin Microservice
        version: v1
        description: >
          The EntandoPlugin allows customers to extend the functionality of a typical Entando application by
          deploying a microservice based on the Entando JHipster Blueprint. An EntandoPlugin is typically defined
          from an Entando Bundle, which typically implements a microfrontend that uses the microservice provided
          in this plugin using the backend-for-fronted pattern.
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
          - version: v1
            kind: Ingress
          - version: v1
            kind: PersistentVolumeClaim
        specDescriptors: [ ]
        statusDescriptors: [ ]
      - name: entandoapps.entando.org
        displayName: EntandoApp
        kind: EntandoApp
        version: v1
        description: >-
          An Entando App deploys the typical components required to host a typical Entando App. The core server side
          components that are deployed include the Entando Engine, the Portal, and the Entando CMS components. These
          are accessed through the Entando App Builder browser application. The Entando Component Manager is the third
          component deployed for an Entando App and it enables the basic integration between the Entando App Engine
          and the Entando Kubernetes Infrastructure.
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
          - version: v1
            kind: Ingress
          - version: v1
            kind: PersistentVolumeClaim
        specDescriptors: [ ]
        statusDescriptors: [ ]
      - name: entandoapppluginlinks.entando.org
        displayName: EntandoAppPluginLink
        kind: EntandoAppPluginLink
        version: v1
        description: Entando App Plugin Link
        resources:
          - version: v1
            kind: Service
          - version: v1
            kind: Ingress
        specDescriptors: [ ]
        statusDescriptors: [ ]
      - name: entandodebundles.entando.org
        displayName: EntandoDeBundle
        kind: EntandoDeBundle
        version: v1
        description: EntandoDeBundle
        resources:
        specDescriptors: [ ]
        statusDescriptors: [ ]
    required: [ ]
  relatedImages:
    - name: rhel8-mysql-80
      image: registry.redhat.io/rhel8/mysql-80@sha256:162662b43ebc94e30f9ac66a57b143b192aebd65bb96cf44b1d54dd140563cd6
    - name: rhel8-postgresql-12
      image: registry.redhat.io/rhel8/postgresql-12@sha256:c6b6da4f762c2f68bfe558efe954739438ffa2e9aae1c617b50011fb0eed8347
    - name: app-builder #6.3.44
      image: docker.io/entando/app-builder@sha256:55228066b17dc2bbef6c20651ed6f0b61755407da61be8655c536953c4b7e43e
    - name: entando-component-manager #6.3.8
      image: docker.io/entando/entando-component-manager@sha256:5bca03eefa1eea5e1c8af9831981c2b9338e8c316684b3f029d87fa18e833411
    - name: entando-de-app-eap #6.3.50
      image: docker.io/entando/entando-de-app-eap@sha256:50257d3c1a0ed4da53f6c77acccb8cb8d1b15ecb3de8a40609443016d1e0f9d9
    - name: entando-k8s-app-controller #6.3.5
      image: docker.io/entando/entando-k8s-app-controller@sha256:2360de53d9a8e3ddbf2cf4e9ba386576570b532a439d5f34a56bf226bdf8c678
    - name: entando-k8s-app-plugin-link-controller #6.3.3
      image: docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:7412f114e653479b27499cc2d1c366745e5d307e09d637f7967a67ab769654b7
    - name: entando-k8s-cluster-infrastructure-controller #6.3.2
      image: docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:8a109e31ab0f1e42dd4ab2f3239d2ef87d6964d5529f35cd03379574bc3cf967
    - name: entando-k8s-composite-app-controller #6.3.3
      image: docker.io/entando/entando-k8s-composite-app-controller@sha256:5393e8d039631401a0138f748edcdc2fe95a8a1cd7fd23d845f4561692780d15
    - name: entando-k8s-database-service-controller #6.3.7
      image: docker.io/entando/entando-k8s-database-service-controller@sha256:061cd86df694e2475c19d408e25da66c6feb26a1876e41030ab5c6d6ae9b558e
    - name: entando-k8s-dbjob #6.3.1
      image: docker.io/entando/entando-k8s-dbjob@sha256:a953072b663edeb3081c6f1a720079bdad2bdcc65e8ecca215363b3b2cd0e2f3
    - name: entando-k8s-keycloak-controller #6.3.4
      image: docker.io/entando/entando-k8s-keycloak-controller@sha256:58fc8bda7b68fc4e6311598739ec5b9b0271ef106d2e9bb116d19df4507b16b0
    - name: entando-k8s-plugin-controller #6.3.3
      image: docker.io/entando/entando-k8s-plugin-controller@sha256:0ee92f85a37a5274014b2f956a4c2c3b39686708070e8c746ee3b2be0d0a668c
    - name: entando-k8s-service #6.3.2
      image: docker.io/entando/entando-k8s-service@sha256:3d5e53ab17a1ff213dc9f6bb23052bec0b0f085a2fba7bd28d753c431c7dadb0
    - name: entando-redhat-sso #6.3.5
      image: docker.io/entando/entando-redhat-sso@sha256:9b807937577a85de830cceaeedf73bf4bbfcabfbc8c246a21c2af06f02ef06c7
  install:
    strategy: deployment
    spec:
      permissions:
        - serviceAccountName: entando-operator
          rules:
            - apiGroups:
                - entando.org
              resources:
                - '*'
              verbs:
                - '*'
            - apiGroups:
                - ''
              resources:
                - secrets
              verbs:
                - create
                - get
                - delete
                - update
            - apiGroups:
                - ''
              resources:
                - pods/exec
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - pods
                - endpoints
                - services
                - configmaps
                - persistentvolumeclaims
                - serviceaccounts
                - events
              verbs:
                - create
                - get
                - update
                - delete
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - '*'
            - apiGroups:
                - extensions
              resources:
                - ingresses
                - deployments
              verbs:
                - '*'
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - '*'
            - apiGroups:
                - ''
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - get
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
              verbs:
                - get
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
              verbs:
                - get
                - create
      clusterPermissions:
        - serviceAccountName: entando-operator
          rules:
            - apiGroups:
                - entando.org
              resources:
                - '*'
              verbs:
                - '*'
            - apiGroups:
                - ''
              resources:
                - secrets
              verbs:
                - create
            - apiGroups:
                - ''
              resources:
                - pods/exec
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - configmaps
                - endpoints
                - pods
                - services
                - serviceaccounts
                - persistentvolumeclaims
                - events
              verbs:
                - '*'
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - '*'
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - get
            - apiGroups:
                - 'extensions'
              resources:
                - deployments
                - ingresses
              verbs:
                - '*'
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - '*'
            - apiGroups:
                - ''
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
              verbs:
                - get
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
              verbs:
                - get
                - create
        - serviceAccountName: pod-viewer
          rules:
            - apiGroups:
                - ''
              resources:
                - pods
              verbs:
                - get
                - list
                - watch
        - serviceAccountName: entando-editor
          rules:
            - apiGroups:
                - entando.org
              resources:
                - '*'
              verbs:
                - '*'
      deployments:
        - name: entando-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                k8s-app: entando-operator
            template:
              metadata:
                labels:
                  k8s-app: entando-operator
              spec:
                imagePullSecrets:
                  - name: entando-pull-secret
                containers:
                  - image: entando/entando-k8s-controller-coordinator@sha256:e8c9ed2e2b546d972ab405edcef12aed7e112159d05f8cb22be3b6d0a660bdd8
                    imagePullPolicy: IfNotPresent
                    name: entando-operator
                    resources:
                      limits:
                        cpu: 1000m
                        memory: 1024Mi
                      requests:
                        cpu: 250m
                        memory: 128Mi
                    env:
                      - name: ENTANDO_NAMESPACES_TO_OBSERVE
                        valueFrom:
                          fieldRef:
                            fieldPath: 'metadata.annotations[''olm.targetNamespaces'']'
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: ENTANDO_POD_READINESS_TIMEOUT_SECONDS
                        value: "1000"
                      - name: ENTANDO_POD_COMPLETION_TIMEOUT_SECONDS
                        value: "1000"
                      - name: ENTANDO_DISABLE_KEYCLOAK_SSL_REQUIREMENT
                        value: "true"
                      - name: ENTANDO_K8S_OPERATOR_VERSION
                        value: 0.3.60
                      - name: ENTANDO_K8S_OPERATOR_VERSION_TO_REPLACE
                        value: 0.3.56
                      - name: ENTANDO_K8S_OPERATOR_DEPLOYMENT_TYPE
                        value: olm
                      - name: OPERATOR_NAME
                        value: entando-operator
                      - name: ENTANDO_K8S_OPERATOR_GC_CONTROLLER_PODS
                        value: "true"
                      - name: ENTANDO_K8S_OPERATOR_SECURITY_MODE
                        value: strict
                      - name: ENTANDO_K8S_OPERATOR_COMPLIANCE_MODE
                        value: redhat
                      - name: ENTANDO_K8S_OPERATOR_SERVICEACCOUNT
                        valueFrom:
                          fieldRef:
                            fieldPath: spec.serviceAccountName
                    startupProbe:
                      exec:
                        command:
                          - cat
                          - /tmp/EntandoControllerCoordinator.ready
                      periodSeconds: 3
                      failureThreshold: 50
                      successThreshold: 1
                      timeoutSeconds: 1
                    livenessProbe:
                      exec:
                        command:
                          - cat
                          - /tmp/EntandoControllerCoordinator.ready
                      periodSeconds: 5
                      failureThreshold: 1
                      timeoutSeconds: 1
                nodeSelector:
                  beta.kubernetes.io/os: linux
                serviceAccountName: entando-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: true
    - type: AllNamespaces
      supported: true
